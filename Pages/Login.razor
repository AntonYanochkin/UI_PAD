@page "/login"
@using UI.Models
@using UI.Services
@inject HttpClient Http
@inject TokenAuthenticationStateProvider AuthProvider
@inject NavigationManager Navigation


<h3>login</h3>
<EditForm Model="LoginModel">
    <DataAnnotationsValidator />
    @* <ValidationSummary/> *@

    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" class="form-control" @bind-Value="LoginModel.Username" />
        <ValidationMessage For="@(() => LoginModel.Username)" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" class="form-control" @bind-Value="LoginModel.Password" />
        <ValidationMessage For="@(() => LoginModel.Password)" />
    </div>
    <button @onclick="Login1">Login</button>
</EditForm>
@code {
    private LoginModel LoginModel = new LoginModel();


    private async Task Login1()
    {
        var response = await Http.PostAsJsonAsync("api/auth/login", new
        {
            username = LoginModel.Username,
            password = LoginModel.Password
        });

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<TokenResponse>();
            await AuthProvider.MarkUserAsAuthenticated(result.Token);
            Navigation.NavigateTo("/");
        }

    }

    private class TokenResponse
    {
        public string Token { get; set; }
    }
}
